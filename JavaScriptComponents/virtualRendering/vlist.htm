<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
	<meta charset="utf-8" />
    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />
    <title></title>
    
    <style type="text/css" media="all">
		
        .noselect
        {
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

        body, html {
            padding: 0;
            margin: 0;
            height: 100%;
            width: 100%;
            min-height: 100%;
            min-width: 100%;
            #text-align: center;
        }
    </style>
    

    <style type="text/css">
        
    </style>

</head>
<body>
    <div id="app"></div>
    
    
    <script src="../ts/vlist.js"></script>
    
    <!--
    <script src="vlist.js"></script>
    -->

    <script type="text/javascript">

        
        if (true)
        {

            // This will create a scrolling list of 300x300 with 10000 rows. It is necessary to specify
            // how tall each row is by setting the `itemHeight` prpoerty in the config object. In this
            // example, we set up a generator function that will generate each row on demand.
            var list1 = new VirtualList({
                w: 300,
                h: 300,
                itemHeight: 31,
                totalRows: 10000,
                generatorFn: function (row)
                {
                    var el = document.createElement("div");
                    el.innerHTML = "Generated ITEM " + row;
                    el.style.borderBottom = "1px solid red";
                    el.style.position = "absolute";
                    return el;
                }
            });
            document.body.appendChild(list1.container);
        }
        


        if (true)
        {

            // The code below will create an array of 10000 DOM elements beforehand and pass them to
            // the list. The Virtual list will then display them on demand. Of course, even if the
            // virtual list is smart about displaying them, this method fills up a lot of memory by
            // creating the elements before-hand.
            var bigAssList1 = [];
            for (var i = 0; i < 10000; i++)
            {
                var el = document.createElement("div");
                //el.classList.add("item");
                el.innerHTML = "ITEM " + i;
                el.style.borderBottom = "1px solid red";
                // el.style.position = "absolute"; // is already being set to absolute... 
                bigAssList1.push(el);
            }

            var list2 = new VirtualList({
                w: 300,
                h: 300,
                items: bigAssList1,
                itemHeight: 31
            });
            document.body.appendChild(list2.container);
        }
        
        if (true)
        {

            // The code below will create an array of 10000 strings beforehand and pass them to
            // the list. The Virtual list will then display them on demand.
            var bigAssList2 = [];
            for (var i = 0; i < 10000; i++)
                bigAssList2.push("StringItem " + i);

            var list3 = new VirtualList({
                w: 300,
                h: 300,
                items: bigAssList2,
                itemHeight: 31
            });
            document.body.appendChild(list3.container);
        }

    </script>

</body>
</html>
