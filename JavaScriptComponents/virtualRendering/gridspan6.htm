<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta charset="utf-8" />
    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />
    <title></title>

    <style type="text/css" media="all">
        .noselect {
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

        body, html {
            padding: 0;
            margin: 0;
            height: 100%;
            width: 100%;
            min-height: 100%;
            min-width: 100%;
            #text-align: center;
        }

        * {
            margin:0px;
            padding: 0px;
        }

    </style>


    <style type="text/css">

        .grid-container {
            display: grid;
            grid-template-columns: auto auto auto auto auto;
            #grid-template-columns: 1fr 50% 1fr;
            #grid-template-row: 1fr 1fr 1fr 1fr;
            #grid-auto-columns: 1fr;
            #grid-auto-rows: 1fr;
            grid-auto-rows: minmax(70px, auto);
            grid-gap: 10px;
            background-color: #2196F3;
            padding: 10px;
        }

        .grid-container > div {
            background-color: rgba(255, 255, 255, 0.8);
            text-align: center;
            padding: 20px;
            font-size: 30px;
        }

    </style>

</head>
<body>
    <h1>Grid Lines</h1>

    <!--
    https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-rows
    https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-rows
    
        fr: fraction
    https://alligator.io/css/css-grid-layout-fr-unit/
    https://developer.mozilla.org/en-US/docs/Web/CSS/minmax
    https://www.w3schools.com/cssref/css_units.asp
    https://css-tricks.com/snippets/css/complete-guide-grid/
    https://css-tricks.com/things-ive-learned-css-grid-layout/
    https://gridbyexample.com/examples/
    -->
    
    <style>

        /*
        #grid1>div:nth-child(-n+3) {
            background-color: hotpink !important;
        }

        #grid1>div:nth-last-child(-n+3) {
            background-color: crimson !important;
        }
        */

        /*
        #grid1>div:nth-child(1n) {
            background-color: hotpink !important;
        }


        #grid1>div:nth-child(2n) {
            background-color: orange !important;
        }

        #grid1>div:nth-child(3n) {
            background-color: gray !important;
        }
        */

        
        
        
        
        
        /*
        #grid1>div:nth-child(3n+1) {
            background-color: hotpink !important;
        }


        #grid1>div:nth-child(3n+2) {
            background-color: crimson !important;
        }


        #grid1>div:nth-child(3n+3) {
            background-color: blueviolet !important;
        }        
        */
        
        
        /*
        #grid1>div:nth-child(6n-2) {
            background-color: crimson !important;
        }

        #grid1>div:nth-child(6n-1) {
            background-color: crimson !important;
        }

        #grid1>div:nth-child(6n) {
            background-color: crimson !important;
        }
        */

        
        /*
        #grid1>div:nth-child(6n-3) {
            background-color: crimson !important;
        }

        #grid1>div:nth-child(6n-4) {
            background-color: crimson !important;
        }

        #grid1>div:nth-child(6n-5) {
            background-color: crimson !important;
        }
        */

/*
        #grid1>div:nth-child(5n-4) {
            background-color: red !important;
        }


        #grid1>div:nth-child(5n-2) {
            background-color: red !important;
        }


        #grid1>div:nth-child(5n) {
            background-color: red !important;
        }
*/

        #grid1>div:nth-child(n+3) {
            background-color: red !important;
        }

    </style>
    
    
    <div id="grid1" class="grid-container">
        
    </div>

    <img src="Grid.png" alt="grid" />

    <!--
    <script src="../ts/mylist.js"></script>
    -->
    <script type="text/javascript">
        let grid1 = document.getElementById("grid1");

        let data = [
            ["a", "b", "c"],
            ["d", "e", "f"],
            ["g", "h", "i"],
            ["j", "k", "l"],
            ["m", "n", "o"],
            ["p", "q", "r"]
        ];

/**/
        data = [
            ["a", "b", "c", "cc", 'dd'],
            ["d", "e", "f", "ff", 'ee'],
            ["g", "h", "i", "ii", 'ff'],
            ["j", "k", "l", "ll", 'gg'],
            ["m", "n", "o", "oo", 'hh'],
            ["p", "q", "r", "rr", 'ii']
        ];



        for (let row = 0; row < data.length; ++row)
        {
            for (let column = 0; column < data[row].length; ++column) 
            {
                // querySelector vs. getElementById
                // 8'269'737 vs. 22'718'350 = 2.7x slower
                // document.querySelector("div#grid1>div.r1.c1")
                // document.querySelector("#grid1>div.r1.c1")
                // document.querySelector("#grid1>.r1.c2")
                // document.querySelector("#grid1 .r1.c1")
                console.log(data[row][column]);
                let div = document.createElement("div");
                div.setAttribute("id", `grid1_r${row}_c${column}`);
                div.setAttribute("class", `r${row} c${column}`);
                div.setAttribute("style", `
grid-row-start: ${10+row+1};
grid-row-end: ${10+row+2};
grid-column-start: ${column+1};
grid-column-end: ${column+2};
background-color: palegoldenrod;
#height: 300px;
`);
                
                div.appendChild(document.createTextNode(data[row][column]));
                grid1.appendChild(div);
            } // Next column 
            
        } // Next row 


        let final_div = document.createElement("div");
        final_div.appendChild(document.createTextNode("final"));
        final_div.setAttribute("style", `
grid-row-start: 100;
grid-row-end: 101;
grid-column-start: 1;
grid-column-end: 2;
background-color: palegoldenrod;
visibility: hidden;
#opacity: 0;
#height: 300px;
`);

        grid1.appendChild(final_div);

        let final2_div = document.createElement("div");
        final2_div.appendChild(document.createTextNode("final222"));
        final2_div.setAttribute("style", `
grid-row-start: 100;
grid-row-end: 101;
grid-column-start: 1;
grid-column-end: 2;
background-color: palegoldenrod;
#height: 300px;
display: hidden;
`);

        grid1.appendChild(final2_div);

    </script>

</body>
</html>
